
가속해서 떨어질 때 받아치기가 힘들어지는 현상 해결 방법 / 해결을 해야만 할까?
최고속도를 고정해두거나, 대포가 공이 떨어질 때의 힘을 기준으로 더 힘을 받도록 설정?
a. ballbounce 스크립트에 최대 힘을 10으로 설정. 대포의 스피드가 7이고 ball보다 mass가 2배이기 때문.

벽에 공이 붙게되는 현상 -> 벽에 부딪힐 때 반대 방향으로 힘을 가하게끔 함수 작성. (튕겨나가게끔)
위로도 좀 튕겨나가게 할까?
a. 반대편으로 튕겨나가게끔 설정. public float bouncepower 1로 일단 설정
위로는 힘을 아직 안 넣음 *****

대포 개수를 늘리고 대포 충전 시간을 낮춰야할 필요성이 있음. // 
a. 대포 충전시간 1초 쯤으로 만들고, 대포 개수를 4~5개로?

목숨은 3개로 유지할 것인가?
a. 일단은. / 땅에 닿으면 위로 많이 튕겨나가게 설정해뒀지만, heartbreakbounce 설정아직 않함.(power)

슬로우모션 스킬 넣기
a. 슬로우모션 버튼 sprite랑 같이 만들어야 함. 한 번 쓰고나면 몇 초 동안 유지되게끔 하고
쓰고 나면 자동 충전. 슬로우모션에 대해서 animation 공부하기 버튼에 대해서도.

bomb과 관련한 힘 넣는 코드짜기
a. 폭발 범위를 정하고 해당 폭발 범위와 겹치는 ball에 대해서 폭발 중심(cb 중심)으로부터 ball의 중심 거리를 계산하여
그에 비례해서 폭발 힘을 조정하기 (벽에 부딪혀서 폭발 힘을 통해 공을 띄울 수 있도록.)
그리고 공이 직접적으로 부딪혀서 전달되는 힘을 줄이기
폭발범위는 cb의 1.5배 정도.
animation은 동그라미가 커지는 형식으로. (깔끔하게) -> 폭발에 대해서 상호작용해야 하므로... 애니메이션이 아니라
변화하는 prefab이 더 나을지도. / 아니다 폭발을 한 순간에 일으킨다고 고려하면 상관 없는 것.

경쟁 관련된 걸 넣을 수 있는지. google play 참고(기록들 공유)


게임 초기화면 - 시작, 설정(오디오), 게임 방법, 스킨(?)
sprite -> 배경(깔끔한거), 대포, 대포알, 공, 벽, 메뉴 패널, 충전바, 충전칸, 폭발 prefab sprite, 목숨, 


전체적으로 난이도 낮추기 + 대포 폭발력에 의해서만 공이 움직일 수 있도록 조정.
- 볼에 대한 중력 정도 낮추고, 대포 속도 약간 증가, 벽에 부딪히면 위로 힘 설정.

스토리도 몰입적임.

button pivot 제대로 설정하기 *************
------------------------------------------------------------



- 무적시간 넣기(하트 깨지고 몇초간은 안 죽게 invoke 활용)
-> 설정 완료

heartbreakbounce 힘 조금 낮추기
4f -> 2.5f 완료

위로 올라갔을 때, 카메라 벗어나면... 위치 보여주기 ******
https://discussions.unity.com/t/how-to-destroy-object-after-it-moves-out-of-screen/171127 
- outball.cs 완료

폭발 애니메이션 만들기 - prefab으로 작동할 수 있도록. 
-완료

폰 해상도 마다 위로 보이는 정도가 다름. 공평함을 위해서 위에는 구름을 설치하기
--완료

------------------------------------------------

오브젝트 풀링을 통해서 최적화 실시
- 대포, 대포폭발이펙트, 하트, 충전 표시, 아이템 위주로.

순환참조 막겠다고 더럽게 만든 거 말고, 다른 방식으로는 안되는지.


루즈함을 없애기 위한 요소들은?
a. 아이템을 먹어서 목숨을 채우거나 방어막으로 한 번 땅에서 튕겨나게 해주는 거,
아이템은 cb나 ball로 획득할 수 있도록. 그럼 코드는 ball과 cb 스크립트 안에 넣어야 하나?
그게 좋겠다. item들은 prefab으로 만들어서 정해진 범위 내에 랜덤 생성이 가능하도록 하고
if(2Dentdercollision) 을 통해서 other == "obeject name"; 으로 진행.
아니면 태그 설정을 통해 특정 태그에만 collision이 발생하도록 진행..

-> cs 제작 완료. 스프라이트 생성하고 아이템 획득 애니메이션을 가진 object 및 다양한 아이템 프리팹을 만들고 
drag and drop 해야 함. spdup item 획득 시 

차지바 색깔 변경 확인 (item manager 160행 확인) + charge_cb 스크립트의 31행으로 테스트 후 진행.

+ 특정 시간이 지나면 랜덤한 위치에 중력이 강화되는 기믹
+ 바람이 부는 기믹 적용
+ 벽이 잘 튀는 거? or 안좋게 튀는 거? or 벽에는 cannon이 터지지 않도록?
+ 게임 배속 걸기 (끝까지 진행?)
+ 공이 보였다가 안 보였다가!
+ 미션: ex. 총알 2발 이하로 몇 초 유지하기. ~~~ 성공 보상도 랜덤.

게임 배속은 1분 마다. 특정 기믹은 40초 마다 10초씩. 아이템은 평균 15초에 1개씩 5초의 획득 기회....

혹시나 대포 prefab이 빨리 사라져서 카메라 위의 공을 못 맞추는 현상이 일어나는지 확인.

위로 올라갔을 때, 그 한계를 둘 것인가?
+ 위로 올라갔을 때, 얼마나 올라갔는지 indicator 옆에 text로
수치는 목표 높이 - 카메라 최대 높이에서 비율로 따져서 숫자로 산출하기
매우매우 많이 올리면! 100m 를 대충 기준으로 해서 그러면 점수를 엄청 주고. 새로 공 소환하기.
- 정확하게는 문제가 생길 수 있으니, 최대 높이를 통과하면 잠시 시간을 줬다가 카메라 안으로 다시 이동.
position을 바꾸기, destroy는 사용하지 않는다.
힘을 초기화 시키고 잠시 홀드 시켰다가 떨어뜨리기. 

시작 화면 스프라이트 및 씬 생성. 

시작하고 플레이어가 준비할 시간을 주기
corutine 으로 시간을 멈추고 3,2,1 후에 시작.

죽었을 때, 씬매니저 말고 확인을 누를 창을 띄우는 방법 찾기
heart.cs 22행 확인

저장하는 방법.... json 을 사용해서
https://www.youtube.com/watch?v=aUi9aijvpgs 
각종 기록들을 저장해야 함.
a. 에어샷 성공 횟수.. 최고 점수 등
combo나 어떤 상황을 코드가 인식할 수 있도록 cannonball prefab 생성 마다 다 다르게 인식되게 설정하고,
벽 튕김 등등 다양한 상호작용에 대해서 기록이 들어가야 함.
누적되어 저장되어야 하는 게임데이터를 위주로 저장 체계를 돌리게 될 것.
게임 도중에 나가는 것은 기록 모두 삭제 -> 게임이 끝나야 save 진행.
다양한 기록을 나타내는 game data를 한 곳에 모아서 관리하고, 게임 진행 중에 그러한 기록들을 집계하도록 함.
그리고 게임이 끝날 때, 집계한 모든 기록들을 기존 세이브 데이터에 += 로 누적하여 넣을 뿐만 아니라
실제로도 표시하고, 한 게임 당 베스트로 관리해야 함.

즉. A기록이 있다. 현재 게임에서의 A기록, 베스트 A기록, 누적 A기록을 모두 관리해야 함.
현재 게임에서의 A기록은 currentgamedata 로서 관리, 그 외는 gamedata 로 계속 저장되어야 함.



텍스트 관련하여 language 변경하는 거. 

텍스트 폰트 관리하기

skin 관리하는 방법 -- 만약 public을 통해 unity에서 drag and drop을 했던 것들을 명명하는 걸로 바꿔야 할 수도.
skin은 외관적인 것으로 제일 마지막으로 진행.
스킨을 얻는 방법은 게임을 끝낼 때 마다 기록에 따라 특정 재화를 주고 해당 재화로 구매,
또는 어떤 기록을 성공 시킬 때, 자동으로 해금.
https://discussions.unity.com/t/changing-sprite-during-run-time/520521/6 
https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwjCkfmx8oCJAxV32jQHHQ_sPJ0QtwJ6BAgNEAI&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DDNSqdMcL_dU&usg=AOvVaw0BUb0_KM6hQaJdme1AwCEW&opi=89978449 

대포에 맞을 때, 조금의 슬로우모션과 강조 효과? 타격감 필요
- 타격감도 외관적인 부분이므로 나중에 진행.

탄창 수 3개로 줄여도 될 듯? 제일 나중에 판단 후 진행. 난이도 이슈이기 때문.
9:16 기준으로 해야하니... 좀 더 게임이 축소된 느낌이 들게끔. 파워도 낮추고 벽도 낮추기
- 난이도 조절은 나중에.


무한 배속 모드는 따로 만들면 되지 아쉬우면. -> 대포는 무제한으로 해서 ???


최적화하기
1. V-Sync 문제 
수직동기화를 꺼져 있으면 높은 프레임을 시도하다가 성능 저하될 수 있음.
2. 그래픽 설정 및 최적화: 
텍스처 해상도를 낮추거나 압축 적용, 
texture Import Settings에서 텍스처 크기를 줄이거나 포맷을 압축 방식으로 설정
복잡한 셰이더 대신 간단한 셰이더를 사용합니다. Mobile 셰이더나 Unlit 셰이더 같은 경량 셰이더를 사용하면 성능이 향상
Lightmap을 사용하고 실시간 조명은 최소화합니다.
필요하지 않은 그림자나 안티앨리어싱을 끄거나 낮춥니다.
3. 오브젝트 및 물리 연산
오브젝트 풀링을 사용하여 반복적인 오브젝트 생성 및 파괴를 피합니다. 
- 대포/하트/충전 표시/대포 폭발 이펙트 등 대상으로 진행하기

Rigidbody나 Collider 같은 물리 관련 컴포넌트의 사용을 최소화합니다. 
4. 스크립트 성능
특히 update()에서 무거운 함수 사용 금지
5. 메모리 관리 문제
임시 객체 (list나 string) 사용 최소화
6. profiler 사용
Unity의 Profiler를 사용하여 실제로 어느 부분에서 성능 병목이 발생하는지 확인할 수 있습니다.
게임을 실행하면서 Unity에서 Window > Analysis > Profiler를 열고 게임을 프로파일링
Deep Profile을 활성화하면 좀 더 세부적인 정보를 확인할 수 있습니다.







//////////////
기록 종류.
1. 대포 직격타 횟수
2. 폭발력으로 때린 횟수
3. 공이 튕긴 횟수. + 벽에 튕긴 횟수
4. 플레이 타임.
5. 공이 카메라 밖으로 나간 시간.
6. 베스트 버틴 타임
7. 스코어??
8. 최대 콤보
9. 충전 대포 횟수
10. 쏜 대포 횟수